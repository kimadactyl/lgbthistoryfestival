---
title: Schedule
---
- require 'set'

- popular = FestivalCalendar::POPULAR
- days = FestivalCalendar::DAYS


%section
  .row
    .small-12.columns.text-center
      %h2.longborder Schedule

      %p.pinkcaps
        All events are free, apart from the <a href="/conference.html">academic conference</a>!
      %p.pinkcaps
        Events are first-come, first-served: please arrive in plenty of time to avoid disappointment.
      :markdown
        More popular events will be ticketed: keep an eye on this page, or our [Twitter](http://twitter.com/lgbthistoryfest) or [Facebook](https://www.facebook.com/lgbthistoryfestival) for up-to-the-minute updates.

        *Please note times and events are subject to change.*

      .sticky.contain-to-grid
        %ul#key.schedule.medium-block-grid-6{"data-topbar" => "data-topbar"}
          %li.filter{"data-filter" => ".main-festival"}
            %i.icon-star
            %h4 Main Festival
          %li.filter{"data-filter" => ".family-space"}
            %i.icon-school
            %h4 Family Space
          %li.filter{"data-filter" => ".films"}
            %i.icon-video
            %h4 Films
          %li.filter{"data-filter" => ".theatre"}
            %i.icon-theatre
            %h4 Theatre
          %li.filter{"data-filter" => ".fringe"}
            %i.icon-map
            %h4 Fringe
          %li.filter{"data-filter" => ".conference"}
            %i.icon-book
            %h4 Conference

      =partial 'speakerlist'

    .small-12.columns
      %ul#program.schedule
        - days.each do |day, time|
          .daytitle
            %h2= day
            - case day
            - when 'Monday'
              :markdown
                ### 9th February
            - when 'Tuesday'
              :markdown
                ### 10th February
            - when 'Wednesday'
              :markdown
                ### 11th February
            - when 'Thursday'
              :markdown
                ### 12th February
            - when 'Friday'
              :markdown
                ### 13th February
            - when 'Saturday'
              :markdown
                ### 14th February
                All Saturday events are at Manchester Central Library's performance space, apart from <i class="icon-map"></i> Fringe events at the Joyce Layland LGBT Centre and the Working Class movement library. See individual event listings for details, and our [travel page](/travel.html) for venue information.
            - when 'Sunday'
              :markdown
                ### 15th February
                All Sunday events are at People's History Museum. See our [travel page](/travel.html) for venue information.
          - popular.get_start_times(time).each do |time|
            .timegroup
              .timecol
                %h3.time= time.dtstart.strftime("%H:%M")
              .timeblock
                - eventlists = popular.get_events(time)
                - eventlists.each do |list,events|
                  - events.each_with_index do |event, idx|
                    - friendlyname = data.events[event.uid]
                    %a{:"data-remodal-target" => "#{friendlyname}"}
                      - speakers = Set.new();
                      - data.contribs.each do |_, details|
                        - if details.events.include? event.uid.to_s
                          - speakers << details.urlname
                      %li{:class => "mix event #{list.to_s.parameterize} #{'has-description' if event.description.present?} #{speakers.to_a.join(" ")}"}
                        .event-icon
                          - case list.to_s.parameterize
                          - when 'films'
                            %i.icon-video
                          - when 'family-space'
                            %i.icon-school
                          - when 'theatre'
                            %i.icon-theatre
                          - when 'conference'
                            %i.icon-book
                          - when 'fringe'
                            %i.icon-map
                          - else
                            %p
                        .event-title
                          -# If there's a colon, bold the first half and not  second half.
                          - sections = RubyPants.new(event.summary).to_html.split(":")
                          - if sections.length > 1
                            %strong= sections[0] + ":"
                            = sections[1]
                          - else
                            %strong= sections[0]
                          .location= event.location.split(",").first
                        .event-meta
                          - duration = ((event.dtend - event.dtstart)/60).to_i
                          %span.duration= "#{duration} mins"
                          = "<br/><span class='ticket'><i class='needsticket icon-ticket'></i> #{data.ticketed[friendlyname].cost}</span>" if data.ticketed[friendlyname]


      -# .small-12.columns.speakerlist
      -#   = partial 'speakerlist'

.remodal-bg
  - days.each do |_, time|
    - popular.get_start_times(time).each do |time|
      - eventlists = popular.get_events(time)
      - eventlists.each do |list, events|
        - events.each do |event|
          - friendly_name = data.events[event.uid]
          %div.remodal(data-remodal-id="#{friendly_name}")
            %h3
              = event.summary

            %strong
              = event.dtstart.strftime("%D %H:%M")
            .duration
              = list.to_s[2..-3]
              - case list.to_s.parameterize
              - when 'films'
                %i.icon-video
              - when 'family-space'
                %i.icon-school
              - when 'theatre'
                %i.icon-theatre
              - when 'conference'
                %i.icon-book
              - when 'fringe'
                %i.icon-map
              - if data.ticketed[friendly_name]
                %a(href="#{data.ticketed[friendly_name]}")
                  %i.icon-ticketed
                  ticketed
              - duration = ((event.dtend - event.dtstart)/60).to_i
              %em.duration= "(#{duration} mins)"
            %div.description
              = parseEvent(Kramdown::Document.new(event.description).to_html)
